defmodule Rfc7208.Section5Test do
  use ExUnit.Case

  # Generated by mix rfc7208.testsuite
  # Usage:
  # % mix test
  # % mix test --only set:5
  # % mix test --only tst:5.y where y is in [0..7]

  describe "rfc7208-05-ptr-mechanism-syntax" do
    @tag set: "5"
    @tag tst: "5.0"
    test "5.0 ptr-case-change" do
      # spec 5.5/2 - PTR mechanism syntax - ptr-case-change
      _cli = """
      spfcheck bar@e6.example.com -i 2001:db8::1 -h mail.example.com -v 5 \
       -d test/zones/rfc7208-05-ptr-mechanism-syntax.zonedata
      """

      ctx =
        Spf.check("bar@e6.example.com",
          helo: "mail.example.com",
          ip: "2001:db8::1",
          dns: "test/zones/rfc7208-05-ptr-mechanism-syntax.zonedata"
        )

      assert to_string(ctx.verdict) in ["pass"]
      assert ctx.explanation == ""
    end

    @tag set: "5"
    @tag tst: "5.1"
    test "5.1 ptr-cidr" do
      # spec 5.5/2 - PTR mechanism syntax - ptr-cidr
      _cli = """
      spfcheck foo@e1.example.com -i 1.2.3.4 -h mail.example.com -v 5 \
       -d test/zones/rfc7208-05-ptr-mechanism-syntax.zonedata
      """

      ctx =
        Spf.check("foo@e1.example.com",
          helo: "mail.example.com",
          ip: "1.2.3.4",
          dns: "test/zones/rfc7208-05-ptr-mechanism-syntax.zonedata"
        )

      assert to_string(ctx.verdict) in ["permerror"]
      assert ctx.explanation == ""
    end

    @tag set: "5"
    @tag tst: "5.2"
    test "5.2 ptr-cname-loop" do
      # spec 5.5/7 - PTR mechanism syntax - ptr-cname-loop
      _cli = """
      spfcheck postmaster@loop.example.com -i 192.0.2.4 -h loop.example.com -v 5 \
       -d test/zones/rfc7208-05-ptr-mechanism-syntax.zonedata
      """

      ctx =
        Spf.check("postmaster@loop.example.com",
          helo: "loop.example.com",
          ip: "192.0.2.4",
          dns: "test/zones/rfc7208-05-ptr-mechanism-syntax.zonedata"
        )

      assert to_string(ctx.verdict) in ["neutral"]
      assert ctx.explanation == ""
    end

    @tag set: "5"
    @tag tst: "5.3"
    test "5.3 ptr-empty-domain" do
      # spec 5.5/2 - PTR mechanism syntax - ptr-empty-domain
      _cli = """
      spfcheck foo@e5.example.com -i 1.2.3.4 -h mail.example.com -v 5 \
       -d test/zones/rfc7208-05-ptr-mechanism-syntax.zonedata
      """

      ctx =
        Spf.check("foo@e5.example.com",
          helo: "mail.example.com",
          ip: "1.2.3.4",
          dns: "test/zones/rfc7208-05-ptr-mechanism-syntax.zonedata"
        )

      assert to_string(ctx.verdict) in ["permerror"]
      assert ctx.explanation == ""
    end

    @tag set: "5"
    @tag tst: "5.4"
    test "5.4 ptr-match-implicit" do
      # spec 5.5/5 - PTR mechanism syntax - ptr-match-implicit
      _cli = """
      spfcheck foo@e3.example.com -i 1.2.3.4 -h mail.example.com -v 5 \
       -d test/zones/rfc7208-05-ptr-mechanism-syntax.zonedata
      """

      ctx =
        Spf.check("foo@e3.example.com",
          helo: "mail.example.com",
          ip: "1.2.3.4",
          dns: "test/zones/rfc7208-05-ptr-mechanism-syntax.zonedata"
        )

      assert to_string(ctx.verdict) in ["pass"]
      assert ctx.explanation == ""
    end

    @tag set: "5"
    @tag tst: "5.5"
    test "5.5 ptr-match-ip6" do
      # spec 5.5/5 - PTR mechanism syntax - ptr-match-ip6
      _cli = """
      spfcheck foo@e3.example.com -i CAFE:BABE::1 -h mail.example.com -v 5 \
       -d test/zones/rfc7208-05-ptr-mechanism-syntax.zonedata
      """

      ctx =
        Spf.check("foo@e3.example.com",
          helo: "mail.example.com",
          ip: "CAFE:BABE::1",
          dns: "test/zones/rfc7208-05-ptr-mechanism-syntax.zonedata"
        )

      assert to_string(ctx.verdict) in ["pass"]
      assert ctx.explanation == ""
    end

    @tag set: "5"
    @tag tst: "5.6"
    test "5.6 ptr-match-target" do
      # spec 5.5/5 - PTR mechanism syntax - ptr-match-target
      _cli = """
      spfcheck foo@e2.example.com -i 1.2.3.4 -h mail.example.com -v 5 \
       -d test/zones/rfc7208-05-ptr-mechanism-syntax.zonedata
      """

      ctx =
        Spf.check("foo@e2.example.com",
          helo: "mail.example.com",
          ip: "1.2.3.4",
          dns: "test/zones/rfc7208-05-ptr-mechanism-syntax.zonedata"
        )

      assert to_string(ctx.verdict) in ["pass"]
      assert ctx.explanation == ""
    end

    @tag set: "5"
    @tag tst: "5.7"
    test "5.7 ptr-nomatch-invalid" do
      # spec 5.5/5 - PTR mechanism syntax - ptr-nomatch-invalid
      _cli = """
      spfcheck foo@e4.example.com -i 1.2.3.4 -h mail.example.com -v 5 \
       -d test/zones/rfc7208-05-ptr-mechanism-syntax.zonedata
      """

      ctx =
        Spf.check("foo@e4.example.com",
          helo: "mail.example.com",
          ip: "1.2.3.4",
          dns: "test/zones/rfc7208-05-ptr-mechanism-syntax.zonedata"
        )

      assert to_string(ctx.verdict) in ["fail"]
      assert ctx.explanation == ""
    end
  end
end
